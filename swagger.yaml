openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8081
  description: Generated server url
paths:
  /uav/searchOneUavInfo:
    post:
      tags:
      - uav-controller
      operationId: searchOneUavInfo
      parameters:
      - name: uavName
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Uav"
  /uav/insertTest:
    post:
      tags:
      - uav-controller
      operationId: insertTest
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: integer
                format: int32
  /uav/insertOneLayer:
    post:
      tags:
      - uav-controller
      operationId: insertOneLayer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UavLayer"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: integer
                format: int32
  /uav/insertN:
    post:
      tags:
      - uav-controller
      operationId: insertNLayers
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Uav"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: integer
                format: int32
  /uav/insertMultiUavLayers:
    post:
      tags:
      - uav-controller
      operationId: insertMultiUavLayers
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: integer
                format: int32
  /uav/insertMultiLayers:
    post:
      tags:
      - uav-controller
      operationId: insertMultiLayers
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/UavLayer"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: integer
                format: int32
  /uav/insert1:
    post:
      tags:
      - uav-controller
      operationId: insertOneLayers
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Uav"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: integer
                format: int32
  /uav/addUavInfoAndLayer:
    post:
      tags:
      - uav-controller
      operationId: addUavInfoAndLayers
      requestBody:
        content:
          application/json:
            schema:
              required:
              - uavFile
              - uavInfo
              type: object
              properties:
                uavFile:
                  type: string
                  format: binary
                uavInfo:
                  $ref: "#/components/schemas/Uav"
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /test/addWorkspace:
    post:
      tags:
      - test-controller
      operationId: addWorkspace
      parameters:
      - name: workspaceName
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /uav/test:
    get:
      tags:
      - uav-controller
      operationId: sayHello
      parameters:
      - name: uavId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Uav"
  /uav/searchAllUavLayersInfo:
    get:
      tags:
      - uav-controller
      operationId: searchAllUavLayersInfo
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UavLayer"
  /uav/searchAllUavInfo:
    get:
      tags:
      - uav-controller
      operationId: searchAllUavInfo
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Uav"
  /uav/previewFile/{fileName}:
    get:
      tags:
      - uav-controller
      operationId: previewFile
      parameters:
      - name: fileName
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: binary
  /uav/insert2:
    get:
      tags:
      - uav-controller
      operationId: insert2
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: integer
                format: int32
  /uav/downloadUavLayer/{fileName}:
    get:
      tags:
      - uav-controller
      operationId: downloadUavLayer
      parameters:
      - name: fileName
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: binary
components:
  schemas:
    Uav:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        type:
          type: string
        area:
          type: number
          format: double
        rasterDate:
          type: string
          format: date
    UavLayer:
      type: object
      properties:
        baseFilePath:
          type: string
        id:
          type: integer
          format: int32
        uavId:
          type: integer
          format: int32
        layerName:
          type: string
        fileType:
          type: string
        filePath:
          type: string
        nativeName:
          type: string
        workspace:
          type: string
        coverageStore:
          type: string
        coverage:
          type: string
